#include <stdio.h>

int main() {
    int n, i, j;
    int cost[20][20], visited[20] = {0};
    int a, b, u, v, min;
    int source, ne = 1, min_cost = 0;

    printf("Enter the number of nodes: ");
    scanf("%d", &n);

    printf("Enter the cost matrix:\n");
    for(i = 1; i <= n; i++) {
        for(j = 1; j <= n; j++) {
            scanf("%d", &cost[i][j]);
            if(cost[i][j] == 0) {
                cost[i][j] = 999;  // Use a large number to represent "infinity"
            }
        }
    }

    printf("Enter the root node: ");
    scanf("%d", &source);
    visited[source] = 1;

    printf("\nMinimum cost spanning tree:\n");

    while(ne < n) {
        min = 999;
        for(i = 1; i <= n; i++) {
            if(visited[i]) {
                for(j = 1; j <= n; j++) {
                    if(!visited[j] && cost[i][j] < min) {
                        min = cost[i][j];
                        a = u = i;
                        b = v = j;
                    }
                }
            }
        }

        if(!visited[u] || !visited[v]) {
            printf("Edge %d:\t(%d -> %d) = %d\n", ne++, a, b, min);
            min_cost += min;
            visited[b] = 1;
        }

        cost[a][b] = cost[b][a] = 999;  // Mark edge as used
    }

    printf("\nMinimum cost = %d\n", min_cost);

    return 0;
}
